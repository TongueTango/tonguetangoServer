<?php

/**
 * This is the model base class for the table "person_emails".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PersonEmails".
 *
 * Columns in table "person_emails" available as properties of the model,
 * followed by relations of table "person_emails" available as properties of the model.
 *
 * @property string $id
 * @property string $person_id
 * @property string $email_type
 * @property string $email_address
 * @property string $create_date
 * @property string $update_date
 * @property string $delete_date
 *
 * @property People[] $peoples
 * @property People $person
 * @property UserPersonEmails[] $userPersonEmails
 */
abstract class BasePersonEmails extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'person_emails';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PersonEmails|PersonEmails', $n);
	}

	public static function representingColumn() {
		return 'email_type';
	}

	public function rules() {
		return array(
			array('person_id, email_type, email_address', 'required'),
			array('update_date', 'required', 'on' => 'update'),
			array('person_id', 'length', 'max'=>10),
			array('email_type, email_address', 'length', 'max'=>255),
			array('delete_date', 'safe'),
			array('delete_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, person_id, email_type, email_address, create_date, update_date, delete_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'peoples' => array(self::HAS_MANY, 'People', 'email_id'),
			'person' => array(self::BELONGS_TO, 'People', 'person_id'),
			'userPersonEmails' => array(self::HAS_MANY, 'UserPersonEmails', 'person_email_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'person_id' => null,
			'email_type' => Yii::t('app', 'Email Type'),
			'email_address' => Yii::t('app', 'Email Address'),
			'create_date' => Yii::t('app', 'Create Date'),
			'update_date' => Yii::t('app', 'Update Date'),
			'delete_date' => Yii::t('app', 'Delete Date'),
			'peoples' => null,
			'person' => null,
			'userPersonEmails' => null,
		);
	}

	public function beforeValidate() {
		if($this->isNewRecord) { $this->create_date = date('Y-m-d H:i:s'); }
		else { $this->update_date = date('Y-m-d H:i:s'); }

		return true;
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('person_id', $this->person_id);
		$criteria->compare('email_type', $this->email_type, true);
		$criteria->compare('email_address', $this->email_address, true);
		$criteria->compare('create_date', $this->create_date, true);
		$criteria->compare('update_date', $this->update_date, true);
		$criteria->compare('delete_date', $this->delete_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}