<?php

/**
 * This is the model base class for the table "groups".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Groups".
 *
 * Columns in table "groups" available as properties of the model,
 * followed by relations of table "groups" available as properties of the model.
 *
 * @property string $id
 * @property string $user_id
 * @property string $name
 * @property string $photo
 * @property string $create_date
 * @property string $update_date
 * @property string $delete_date
 *
 * @property GroupMembers[] $groupMembers
 * @property Users $user
 * @property MessageRecipients[] $messageRecipients
 */
abstract class BaseGroups extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'groups';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Groups|Groups', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('user_id, name', 'required'),
			array('user_id', 'length', 'max'=>10),
			array('name, photo', 'length', 'max'=>255),
			array('delete_date', 'safe'),
			array('photo, delete_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, name, photo, create_date, update_date, delete_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'groupMembers' => array(self::HAS_MANY, 'GroupMembers', 'group_id','condition'=>' removed=0'),
			'user' => array(self::BELONGS_TO, 'Users', 'user_id'),
			'messageRecipients' => array(self::HAS_MANY, 'MessageRecipients', 'group_id'),
			'messages' => array(self::MANY_MANY, 'Messages', 'message_recipients(group_id, message_id)'),
			'memberusers' => array(self::HAS_MANY, 'Users', array('user_id'=>'id') ,'through'=>  'groupMembers',),
			'memberpersons' => array(self::HAS_MANY, 'People', array('person_id'=>'id') ,'through'=>  'user'),
		);
	}

	public function pivotModels() {
		return array(
            'groupMembers' => 'GroupMembers',
            'messages' => 'MessageRecipients',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => null,
			'name' => Yii::t('app', 'Name'),
			'photo' => Yii::t('app', 'Photo'),
			'create_date' => Yii::t('app', 'Create Date'),
			'update_date' => Yii::t('app', 'Update Date'),
			'delete_date' => Yii::t('app', 'Delete Date'),
			'groupMembers' => null,
			'user' => null,
			'messageRecipients' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('photo', $this->photo, true);
		$criteria->compare('create_date', $this->create_date, true);
		$criteria->compare('update_date', $this->update_date, true);
		$criteria->compare('delete_date', $this->delete_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}