<?php

/**
 * This is the model base class for the table "message_recipients".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MessageRecipients".
 *
 * Columns in table "message_recipients" available as properties of the model,
 * followed by relations of table "message_recipients" available as properties of the model.
 *
 * @property string $id
 * @property string $message_id
 * @property string $user_id
 * @property string $group_id
 * @property string $facebook_id
 * @property string $twitter_handle
 * @property integer $read
 * @property string $create_date
 * @property string $update_date
 * @property string $delete_date
 *
 * @property Messages $message
 * @property Groups $group
 * @property Users $user
 */
abstract class BaseMessageRecipients extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'message_recipients';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MessageRecipients|MessageRecipients', $n);
	}

	public static function representingColumn() {
		return 'create_date';
	}

	public function rules() {
		return array(
			array('message_id, create_date', 'required'),
			array('update_date', 'required', 'on' => 'update'),
			array('read', 'numerical', 'integerOnly'=>true),
			array('message_id, user_id, group_id', 'length', 'max'=>10),
			array('facebook_id, twitter_handle', 'length', 'max'=>45),
			array('delete_date', 'safe'),
			array('user_id, group_id, facebook_id, twitter_handle, read, delete_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, message_id, user_id, group_id, facebook_id, twitter_handle, read, create_date, update_date, delete_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'message' => array(self::BELONGS_TO, 'Messages', 'message_id'),
			'group' => array(self::BELONGS_TO, 'Groups', 'group_id'),
			'user' => array(self::BELONGS_TO, 'Users', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'message_id' => null,
			'user_id' => null,
			'group_id' => null,
			'facebook_id' => Yii::t('app', 'Facebook'),
			'twitter_handle' => Yii::t('app', 'Twitter Handle'),
			'read' => Yii::t('app', 'Read'),
			'create_date' => Yii::t('app', 'Create Date'),
			'update_date' => Yii::t('app', 'Update Date'),
			'delete_date' => Yii::t('app', 'Delete Date'),
			'message' => null,
			'group' => null,
			'user' => null,
		);
	}

	public function beforeValidate() {
		if($this->isNewRecord) { $this->create_date = date('Y-m-d H:i:s'); }
		else { $this->update_date = date('Y-m-d H:i:s'); }

		return true;
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('message_id', $this->message_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('group_id', $this->group_id);
		$criteria->compare('facebook_id', $this->facebook_id, true);
		$criteria->compare('twitter_handle', $this->twitter_handle, true);
		$criteria->compare('read', $this->read);
		$criteria->compare('create_date', $this->create_date, true);
		$criteria->compare('update_date', $this->update_date, true);
		$criteria->compare('delete_date', $this->delete_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}